openapi: 3.0.0
info:
  title: Shopping API
  version: v1
servers:
  - url: https://localhost:5001

paths:
  /api/shopping/echo:
    summary: This resource represents an echo in the module
    get:
      summary: Gets an echo
      tags:
        - shopping/dummy
      operationId: Shopping_Echo-Get
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
              example:
                messages:
                  - echo
                succeeded: true

  /api/shopping/carts/{identity}:
    summary: This resource represents a Cart in the Shopping module
    get:
      summary: Retrieve a cart identified by the identity
      description: Returns a single Cart
      tags:
        - shopping/carts
      operationId: Shopping_Cart-GetByIdentity
      parameters:
        - name: identity
          in: path
          description: User identity
          required: true
          schema:
            type: string
            example: f5d87eba-c374-45db-a5e4-7b43fd25e7bf
            nullable: false
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfCartDto'
                example:
                  $ref: '#/components/examples/ResultOfCartDto'
        400:
          description: Resource request was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
      - Permissions.Carts.Add: []
      # - JWT:
      #     - "Permissions.Carts.Add" # Policy

  # /api/shopping/carts/{identity}/items:
  #   summary: This resource represents a CartItem in the Shopping module
  #   post:
  #     summary: Add an item to a cart identified by the identity
  #     description: Returns a single Cart
  #     tags:
  #       - shopping/carts
  #     operationId: Shopping_Cart-AddItem
  #     parameters:
  #       - name: identity
  #         in: path
  #         description: User identity
  #         required: true
  #         schema:
  #           type: string
  #           example: f5d87eba-c374-45db-a5e4-7b43fd25e7bf
  #           nullable: false
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/CartItemDto' # TODO: just post a SKU + Quantity is enough (params)
  #       description: The CartItem to add
  #       required: true
  #     responses:
  #       201:
  #         description: Resource was created successfully.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ResultOfCartDto'
  #               example:
  #                 $ref: '#/components/examples/ResultOfCartDto'
  #       400:
  #         description: Resource request was invalid.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ValidationProblemDetailsModel'
  #       401:
  #         description: Authorization information is missing or invalid.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ProblemDetailsModel'
  #       404:
  #         description: Resource was not found.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ProblemDetailsModel'
  #       500:
  #         description: Unexpected error.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ProblemDetailsModel'
  #     security:
  #     - Permissions.Carts.Update: []
  #     # - JWT:
  #     #     - "Permissions.Carts.Update" # Policy

  /api/shopping/carts/{identity}/items/{sku}:
    summary: This resource represents a CartItem with a specific SKU in the Shopping module
    put:
      summary: Add or update an item in a cart identified by the identity
      description: Returns a single Cart
      tags:
        - shopping/carts
      operationId: Shopping_Cart-AddItem
      parameters:
        - name: identity
          in: path
          description: User identity
          required: true
          schema:
            type: string
            example: f5d87eba-c374-45db-a5e4-7b43fd25e7bf
            nullable: false
        - name: sku
          in: path
          description: Product SKU
          required: true
          schema:
            type: string
            example: SKU0123456789
            nullable: false
        - name: quantity
          in: query
          description: Product quantity
          required: true
          schema:
            type: integer
            example: 3
            nullable: false
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfCartDto'
                example:
                  $ref: '#/components/examples/ResultOfCartDto'
        400:
          description: Resource request was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
      - Permissions.Carts.Update: []
      # - JWT:
      #     - "Permissions.Carts.Update" # Policy
    delete:
      summary: Remove an item with a specific SKU from a cart identified by a the identity
      description: Returns a single Cart
      tags:
        - shopping/carts
      operationId: Shopping_Cart-DeleteItem
      parameters:
        - name: identity
          in: path
          description: User identity
          required: true
          schema:
            type: string
            example: f5d87eba-c374-45db-a5e4-7b43fd25e7bf
            nullable: false
        - name: sku
          in: path
          description: Product SKU
          required: true
          schema:
            type: string
            example: SKU0123456789
            nullable: false
      responses:
        204:
          description: Resource request was successful.
        400:
          description: Resource request was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
      - Permissions.Carts.Delete: []
      # - JWT:
      #     - "Permissions.Carts.Delete" # Policy

components:
  schemas:
    ResultResponseModel:
      type: object
      additionalProperties: false
      required:
        - messages
        - isSuccess
      properties:
        messages:
          type: array
          nullable: true
          items:
            type: string
        isSuccess:
          type: boolean
    ProblemDetailsModel:
      type: object
      additionalProperties: false
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    ValidationProblemDetailsModel:
      allOf:
        - $ref: '#/components/schemas/ProblemDetailsModel'
        - type: object
          additionalProperties: false
          required:
            - errors
          properties:
            errors:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
    ResultOfCartDto:
      allOf:
        - $ref: '#/components/schemas/ResultResponseModel'
        - type: object
          additionalProperties: false
          required:
            - data
          properties:
            data:
              nullable: true
              type: object
              $ref: '#/components/schemas/CartDto'
    CartDto:
      type: object
      additionalProperties: false
      required:
        - id
        - identity
        - totalPrice
        - items
      properties:
        id:
          type: string
          format: guid
        identity:
          type: string
          nullable: true
        totalPrice:
          type: number
          format: decimal
        items:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CartItemDto'
    CartItemDto:
      type: object
      additionalProperties: false
      required:
        - id
        - sku
        - name
        - quantity
        - unitPrice
        - totalPrice
      properties:
        id:
          type: string
          format: guid
        sku:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: decimal
        totalPrice:
          type: number
          format: decimal
  examples:
    ResultOfCartDto:
      summary: A sample cart
      value:
        id: dfda0d02-a0b2-4830-a434-067e3cb3c236
        identity: f5d87eba-c374-45db-a5e4-7b43fd25e7bf
        totalPrice: 99.99
        items:
        - id: a1e3b861-5b32-4e7a-8c86-549cc683e5c1
          sku: SKU0123456789
          name: Product X
          quantity: 3
          unitPrice: 3.99
          totalPrice: 11.97
        - id: a602d155-da1e-48b9-af53-cf2bbdae25a9
          sku: SKU9876543210
          name: Product Y
          quantity: 2
          unitPrice: 2.99
          totalPrice: 5.98

  # securitySchemes:
  #   JWT:
  #     type: apiKey
  #     description: "Send the JWT token in this format - Request Header: Authorization=Bearer [access_token]"
  #     name: Authorization
  #     in: header

#security:
#  # - JWT: []
#  - Permissions.Carts.Add: []
#  - Permissions.Carts.Update: []
#  - Permissions.Carts.Delete: []