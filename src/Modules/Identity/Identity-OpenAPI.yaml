openapi: 3.0.0
info:
  title: Catalog API
  version: v1
servers:
  - url: https://localhost:5001

paths:
  /api/identity/echo:
    summary: This resource represents an echo in the module
    get:
      summary: Gets an echo
      tags:
        - identity/dummy
      operationId: Identity_Echo-Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
              example:
                messages:
                  - echo
                succeeded: true

  # Accounts =============================================================
  /api/identity/accounts/profile:
    get:
      tags:
        - identity/accounts
      operationId: Identity_Account-GetProfile
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfUserResponseModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/accounts/UpdateProfile:
    put:
      tags:
        - identity/accounts
      operationId: Identity_Account-UpdateProfile
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/accounts/ChangePassword:
    put:
      tags:
        - identity/accounts
      operationId: Identity_Account-ChangePassword
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/accounts/profile-picture/{userId}:
    get:
      tags:
        - identity/accounts
      operationId: Identity_Account-GetProfilePicture
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfStringResponseModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
    post:
      tags:
        - identity/accounts
      operationId: Identity_Account-UpdateProfilePicture
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfilePictureRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfStringResponseModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []

  # Tokens =============================================================
  /api/identity/tokens:
    post:
      summary: Acquire an access token
      tags:
        - identity/tokens
      operationId: Identity_Token-Acquire
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfTokenResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

  /api/identity/tokens/refresh:
    post:
      summary: Acquire a refresh token
      tags:
        - identity/tokens
      operationId: Identity_Token-Refresh
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfTokenResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

  # Users =============================================================
  /api/identity/users:
    get:
      tags:
        - identity/users
      operationId: Identity_User-GetAll
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfUsersResponseModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
    post:
      tags:
        - identity/users
      operationId: Identity_User-Register
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
    delete:
      tags:
        - identity/users
      operationId: Identity_User-Delete
      parameters:
        - name: id
          in: query
          schema:
            type: string
            nullable: true
          x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/users/{id}:
    get:
      tags:
        - identity/users
      operationId: Identity_User-GetById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfUserResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/users/roles/{id}:
    get:
      tags:
        - identity/users/roles
      operationId: Identity_User-GetRoles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfUserRolesResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
    put:
      tags:
        - identity/users/roles
      operationId: Identity_User-UpdateRoles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRolesRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/users/confirm-email:
    get:
      tags:
        - identity/users
      operationId: Identity_User-ConfirmEmail
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
          x-position: 1
        - name: code
          in: query
          schema:
            type: string
            nullable: true
          x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfStringResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
  /api/identity/users/toggle-status:
    post:
      tags:
        - identity/users
      operationId: Identity_User-ToggleUserStatus
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleUserStatusRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/users/forgot-password:
    post:
      tags:
        - identity/users
      operationId: Identity_User-ForgotPassword
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
  /api/identity/users/reset-password:
    post:
      tags:
        - identity/users
      operationId: Identity_User-ResetPassword
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
  /api/identity/users/export:
    get:
      tags:
        - identity/users
      operationId: Identity_User-Export
      parameters:
        - name: searchString
          in: query
          schema:
            type: string
            default: ''
            nullable: true
          x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfStringResponseModel'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []

  # Roles =============================================================
  /api/identity/roles:
    get:
      tags:
        - identity/roles
      operationId: Identity_Role-GetAll
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfRolesResponseModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
    post:
      tags:
        - identity/roles
      operationId: Identity_Role-Create
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/roles/{id}:
    delete:
      tags:
        - identity/roles
      operationId: Identity_Role-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/roles/permissions/{roleId}:
    get:
      tags:
        - identity/roles/permissions
      operationId: Identity_Role-GetPermissionsByRoleId
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfPermissionResponseModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/roles/permissions/update:
    put:
      tags:
        - identity/roles/permissions
      operationId: Identity_Role-Update
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []

  # RoleClaims =============================================================
  /api/identity/roleclaims:
    get:
      tags:
        - identity/roleclaims
      operationId: Identity_RoleClaim-GetAll
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfRoleClaimsResponseModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
    post:
      tags:
        - identity/roleclaims
      operationId: Identity_RoleClaim-Create
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleClaimRequestModel'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/roleclaims/{roleId}:
    get:
      tags:
        - identity/roleclaims
      operationId: Identity_RoleClaim-GetAllByRoleId
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultOfRoleClaimsResponseModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []
  /api/identity/roleclaims/{id}:
    delete:
      tags:
        - identity/roleclaims
      operationId: Identity_RoleClaim-Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponseModel'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        401:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
      security:
        - JWT: []

components:
  schemas:
    ResultResponseModel:
      type: object
      additionalProperties: false
      required:
        - messages
        - isSuccess
      properties:
        messages:
          type: array
          nullable: true
          items:
            type: string
        isSuccess:
          type: boolean
    ResultOfStringResponseModel:
      allOf:
        - $ref: '#/components/schemas/ResultResponseModel'
        - type: object
          additionalProperties: false
          properties:
            value:
              type: string
              nullable: true
    ProblemDetailsModel:
      type: object
      additionalProperties: false
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    ValidationProblemDetailsModel:
      allOf:
        - $ref: '#/components/schemas/ProblemDetailsModel'
        - type: object
          additionalProperties: false
          required:
            - errors
          properties:
            errors:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string

    # Accounts ============================================================
    UpdateProfileRequestModel:
      type: object
      additionalProperties: false
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: 1
        phoneNumber:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    ChangePasswordRequestModel:
      type: object
      additionalProperties: false
      required:
        - password
        - newPassword
        - confirmNewPassword
      properties:
        password:
          type: string
          minLength: 1
        newPassword:
          type: string
          minLength: 1
        confirmNewPassword:
          type: string
          minLength: 1
    UpdateProfilePictureRequestModel:
      type: object
      additionalProperties: false
      properties:
        fileName:
          type: string
          nullable: true
        extension:
          type: string
          nullable: true
        data:
          type: string
          format: byte
          nullable: true

    # Tokens =============================================================
    ResultOfTokenResponseModel:
      allOf:
        - $ref: '#/components/schemas/ResultResponseModel'
        - type: object
          additionalProperties: false
          properties:
            value:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/TokenResponseModel'
    TokenResponseModel:
      type: object
      additionalProperties: false
      properties:
        token:
          type: string
          nullable: true
        refreshToken:
          type: string
          nullable: true
        userImageURL:
          type: string
          nullable: true
        refreshTokenExpiryTime:
          type: string
          format: date-time
    TokenRequestModel:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
    TokenRefreshRequestModel:
      type: object
      additionalProperties: false
      properties:
        token:
          type: string
          nullable: true
        refreshToken:
          type: string
          nullable: true

    # Users =============================================================
    ResultOfUsersResponseModel:
      allOf:
        - $ref: '#/components/schemas/ResultResponseModel'
        - type: object
          additionalProperties: false
          properties:
            value:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/UserResponseModel'
    UserResponseModel:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        isActive:
          type: boolean
        emailConfirmed:
          type: boolean
        phoneNumber:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        permissions:
          type: array
          nullable: true
          items:
            type: string
    ResultOfUserResponseModel:
      allOf:
        - $ref: '#/components/schemas/ResultResponseModel'
        - type: object
          additionalProperties: false
          properties:
            value:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/UserResponseModel'
    ResultOfUserRolesResponseModel:
      allOf:
        - $ref: '#/components/schemas/ResultResponseModel'
        - type: object
          additionalProperties: false
          properties:
            value:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/UserRolesResponseModel'
    UserRolesResponseModel:
      type: object
      additionalProperties: false
      properties:
        userRoles:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/UserRoleModel'
    UserRoleModel:
      type: object
      additionalProperties: false
      properties:
        roleName:
          type: string
          nullable: true
        roleDescription:
          type: string
          nullable: true
        selected:
          type: boolean
    UpdateUserRolesRequestModel:
      type: object
      additionalProperties: false
      properties:
        userId:
          type: string
          nullable: true
        userRoles:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/UserRoleModel'
    RegisterRequestModel:
      type: object
      additionalProperties: false
      required:
        - firstName
        - lastName
        - email
        - userName
        - password
        - confirmPassword
      properties:
        firstName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        userName:
          type: string
          minLength: 6
        password:
          type: string
          minLength: 6
        confirmPassword:
          type: string
          minLength: 1
        phoneNumber:
          type: string
          nullable: true
        activateUser:
          type: boolean
        autoConfirmEmail:
          type: boolean
    ToggleUserStatusRequestModel:
      type: object
      additionalProperties: false
      properties:
        activateUser:
          type: boolean
        userId:
          type: string
          nullable: true
    ForgotPasswordRequestModel:
      type: object
      additionalProperties: false
      required:
        - email
      properties:
        email:
          type: string
          format: email
          minLength: 1
    ResetPasswordRequestModel:
      type: object
      additionalProperties: false
      required:
        - email
        - password
        - confirmPassword
        - token
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          minLength: 1
        confirmPassword:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1

    # Roles =============================================================
    ResultOfRolesResponseModel:
      allOf:
        - $ref: '#/components/schemas/ResultResponseModel'
        - type: object
          additionalProperties: false
          properties:
            value:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/RoleResponseModel'
    RoleResponseModel:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
    RoleRequestModel:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
    ResultOfPermissionResponseModel:
      allOf:
        - $ref: '#/components/schemas/ResultResponseModel'
        - type: object
          additionalProperties: false
          properties:
            value:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/PermissionResponseModel'
    PermissionResponseModel:
      type: object
      additionalProperties: false
      properties:
        roleId:
          type: string
          nullable: true
        roleName:
          type: string
          nullable: true
        roleClaims:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/RoleClaimResponseModel'
    PermissionRequestModel:
      type: object
      additionalProperties: false
      properties:
        roleId:
          type: string
          nullable: true
        roleClaims:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/RoleClaimRequestModel'
    ResultOfRoleClaimsResponseModel:
      allOf:
        - $ref: '#/components/schemas/ResultResponseModel'
        - type: object
          additionalProperties: false
          properties:
            value:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/RoleClaimResponseModel'
    RoleClaimResponseModel:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        roleId:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        module:
          type: string
          nullable: true
        group:
          type: string
          nullable: true
        selected:
          type: boolean
    RoleClaimRequestModel:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        roleId:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        group:
          type: string
          nullable: true
        selected:
          type: boolean

  securitySchemes:
    JWT:
      type: apiKey
      description: Input your JWT token in this format - Bearer {your token here} to access this API
      name: Authorization
      in: header
      # bearerFormat: JWT
security:
  - JWT: []