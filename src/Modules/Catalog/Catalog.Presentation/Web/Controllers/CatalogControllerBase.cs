//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"

namespace Modules.Catalog.Presentation.Web.Controllers
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]

    public abstract class CatalogControllerBase : Microsoft.AspNetCore.Mvc.Controller
    {
        /// <summary>
        /// Gets an echo
        /// </summary>
        /// <returns>OK</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("api/catalog/echo", Name = "Catalog_Echo-Get")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultResponseModel>> EchoGet();

        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("api/catalog/brands", Name = "Catalog_Brand-GetAll")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<PagedResultOfBrandsResponseModel>> BrandGetAll([Microsoft.AspNetCore.Mvc.FromQuery] int? pageNumber, [Microsoft.AspNetCore.Mvc.FromQuery] int? pageSize, [Microsoft.AspNetCore.Mvc.FromQuery] string searchString, [Microsoft.AspNetCore.Mvc.FromQuery] string orderBy, [Microsoft.AspNetCore.Mvc.FromQuery] bool? includeDeleted = false);

        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("api/catalog/brands", Name = "Catalog_Brand-Post")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfEntityCreatedResponseModel>> BrandPost([Microsoft.AspNetCore.Mvc.FromBody] BrandModel model);

        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("api/catalog/brands/{id}", Name = "Catalog_Brand-GetById")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfBrandResponseModel>> BrandGetById(string id);

        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("api/catalog/brands/{id}", Name = "Catalog_Brand-Put")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfEntityUpdatedResponseModel>> BrandPut(string id, [Microsoft.AspNetCore.Mvc.FromBody] BrandModel model);

        [Microsoft.AspNetCore.Mvc.HttpDelete, Microsoft.AspNetCore.Mvc.Route("api/catalog/brands/{id}", Name = "Catalog_Brand-Delete")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfEntityDeletedResponseModel>> BrandDelete(string id);

        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("api/catalog/brands/export", Name = "Catalog_Brand-Export")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfStringResponseModel>> BrandExport([Microsoft.AspNetCore.Mvc.FromQuery] string searchString = "");

        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("api/catalog/brands/import", Name = "Catalog_Brand-Import")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfIntegerResponseModel>> BrandImport([Microsoft.AspNetCore.Mvc.FromBody] UploadRequestModel model);

        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("api/catalog/products", Name = "Catalog_Product-GetAll")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<PagedResultOfProductsResponseModel>> ProductGetAll([Microsoft.AspNetCore.Mvc.FromQuery] int? pageNumber, [Microsoft.AspNetCore.Mvc.FromQuery] int? pageSize, [Microsoft.AspNetCore.Mvc.FromQuery] string searchString, [Microsoft.AspNetCore.Mvc.FromQuery] string orderBy);

        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("api/catalog/products", Name = "Catalog_Product-Post")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfEntityCreatedResponseModel>> ProductPost([Microsoft.AspNetCore.Mvc.FromBody] ProductModel model);

        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("api/catalog/products/{id}", Name = "Catalog_Product-GetById")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfProductResponseModel>> ProductGetById(string id);

        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("api/catalog/products/{id}", Name = "Catalog_Product-Put")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfEntityUpdatedResponseModel>> ProductPut(string id, [Microsoft.AspNetCore.Mvc.FromBody] ProductModel model);

        [Microsoft.AspNetCore.Mvc.HttpDelete, Microsoft.AspNetCore.Mvc.Route("api/catalog/products/{id}", Name = "Catalog_Product-Delete")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfEntityDeletedResponseModel>> ProductDelete(string id);

        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("api/catalog/products/export", Name = "Catalog_Product-Export")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfStringResponseModel>> ProductExport([Microsoft.AspNetCore.Mvc.FromQuery] string searchString = "");

        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("api/catalog/products/import", Name = "Catalog_Product-Import")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<ResultOfIntegerResponseModel>> ProductImport([Microsoft.AspNetCore.Mvc.FromBody] UploadRequestModel model);

        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("api/catalog/producttypes", Name = "Catalog_ProductTypes-GetAll")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<PagedResultOfProductTypesResponseModel>> ProductTypesGetAll([Microsoft.AspNetCore.Mvc.FromQuery] int? pageNumber, [Microsoft.AspNetCore.Mvc.FromQuery] int? pageSize, [Microsoft.AspNetCore.Mvc.FromQuery] string searchString, [Microsoft.AspNetCore.Mvc.FromQuery] string orderBy);

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("messages")]
        public System.Collections.Generic.IEnumerable<string> Messages { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("isSuccess")]
        public bool IsSuccess { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfStringResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public string Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfIntegerResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public int Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProblemDetailsModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string Title { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public int? Status { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("detail")]
        public string Detail { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("instance")]
        public string Instance { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ValidationProblemDetailsModel : ProblemDetailsModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("errors")]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>> Errors { get; set; } = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfEntityCreatedResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("entityId")]
        public string EntityId { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfEntityUpdatedResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("entityId")]
        public string EntityId { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfEntityDeletedResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("entityId")]
        public string EntityId { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PagedResultOfBrandsResponseModel : ResultOfBrandsResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("currentPage")]
        public int CurrentPage { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalPages")]
        public int TotalPages { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalCount")]
        public long TotalCount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pageSize")]
        public int PageSize { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hasPreviousPage")]
        public bool HasPreviousPage { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hasNextPage")]
        public bool HasNextPage { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfBrandResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public BrandModel Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfBrandsResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public System.Collections.Generic.IEnumerable<BrandModel> Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BrandModel : Anonymous
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PagedResultOfProductsResponseModel : ResultOfProductsResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("currentPage")]
        public int CurrentPage { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalPages")]
        public int TotalPages { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalCount")]
        public long TotalCount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pageSize")]
        public int PageSize { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hasPreviousPage")]
        public bool HasPreviousPage { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hasNextPage")]
        public bool HasNextPage { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfProductsResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public System.Collections.Generic.IEnumerable<ProductModel> Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductModel : Anonymous2
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductTypeModel : Anonymous3
    {

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfProductResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public ProductModel Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PagedResultOfProductTypesResponseModel : ResultOfProductTypesResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("currentPage")]
        public int CurrentPage { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalPages")]
        public int TotalPages { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("totalCount")]
        public long TotalCount { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pageSize")]
        public int PageSize { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hasPreviousPage")]
        public bool HasPreviousPage { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("hasNextPage")]
        public bool HasNextPage { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultOfProductTypesResponseModel : ResultResponseModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        public System.Collections.Generic.IEnumerable<ProductTypeModel> Value { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AuditStateModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("createdBy")]
        public string CreatedBy { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("createdDate")]
        public System.DateTimeOffset CreatedDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("createdDescription")]
        public string CreatedDescription { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedBy")]
        public string UpdatedBy { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedDate")]
        public System.DateTimeOffset? UpdatedDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedDescription")]
        public string UpdatedDescription { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("updatedReasons")]
        public System.Collections.Generic.IEnumerable<string> UpdatedReasons { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deactivated")]
        public bool? Deactivated { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deactivatedReasons")]
        public System.Collections.Generic.IEnumerable<string> DeactivatedReasons { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deactivatedBy")]
        public string DeactivatedBy { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deactivatedDate")]
        public System.DateTimeOffset? DeactivatedDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deactivatedDescription")]
        public string DeactivatedDescription { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]
        public bool? Deleted { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deletedBy")]
        public string DeletedBy { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deletedDate")]
        public System.DateTimeOffset? DeletedDate { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deletedReason")]
        public string DeletedReason { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("deletedDescription")]
        public string DeletedDescription { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("lastActionDate")]
        public System.DateTimeOffset? LastActionDate { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UploadRequestModel
    {

        [System.Text.Json.Serialization.JsonPropertyName("fileName")]
        public string FileName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("extension")]
        public string Extension { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public byte[] Data { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Anonymous
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public System.Guid Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("keywords")]
        public System.Collections.Generic.IEnumerable<string> Keywords { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pictureSvg")]
        public string PictureSvg { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pictureFileName")]
        public string PictureFileName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pictureUri")]
        public string PictureUri { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("auditState")]
        public AuditStateModel AuditState { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Anonymous2
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public System.Guid Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("keywords")]
        public System.Collections.Generic.IEnumerable<string> Keywords { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pictureSvg")]
        public string PictureSvg { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pictureFileName")]
        public string PictureFileName { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("pictureUri")]
        public string PictureUri { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("sku")]
        public string Sku { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("barcode")]
        public string Barcode { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("size")]
        public string Size { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("rating")]
        public int Rating { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("price")]
        public decimal Price { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("typeId")]
        public System.Guid TypeId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public ProductTypeModel Type { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("brandId")]
        public System.Guid BrandId { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]
        public BrandModel Brand { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("auditState")]
        public AuditStateModel AuditState { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Anonymous3
    {

        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public System.Guid Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; set; }

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625