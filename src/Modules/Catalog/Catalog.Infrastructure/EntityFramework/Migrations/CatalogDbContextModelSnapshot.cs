// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modules.Catalog.Infrastructure.EntityFramework;

#nullable disable

namespace Modules.Catalog.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("catalog")
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Modules.Catalog.Domain.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Keywords")
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PictureFileName")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("PictureSvg")
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUri")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("Brand", "catalog");
                });

            modelBuilder.Entity("Modules.Catalog.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barcode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Keywords")
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PictureFileName")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("PictureSvg")
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUri")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Size")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("Sku")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Product", "catalog");
                });

            modelBuilder.Entity("Modules.Catalog.Domain.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("ProductType", "catalog");
                });

            modelBuilder.Entity("Modules.Catalog.Domain.Brand", b =>
                {
                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("BrandId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BrandId");

                            b1.ToTable("Brand", "catalog");

                            b1.WithOwner()
                                .HasForeignKey("BrandId");
                        });

                    b.Navigation("AuditState");
                });

            modelBuilder.Entity("Modules.Catalog.Domain.Product", b =>
                {
                    b.HasOne("Modules.Catalog.Domain.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modules.Catalog.Domain.ProductType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Product", "catalog");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("AuditState");

                    b.Navigation("Brand");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
