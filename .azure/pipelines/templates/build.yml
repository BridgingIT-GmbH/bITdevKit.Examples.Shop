#######################################################################################################
# BUILD
#
parameters:
  - name: buildConfiguration
    type: string
    default: 'Release'
  - name: buildPlatform
    type: string
    default: 'Any CPU'
  - name: buildSolution
    type: string
    default: '$(Build.SourcesDirectory)/*.sln'

jobs:
  - job: build
    displayName: Build job
    pool:
      vmImage: 'ubuntu-latest'
    # variables:
    #   system.debug: true
    steps:
    - checkout: self
      fetchDepth: '0'

    - task: UseDotNet@2
      displayName: Use .NET SDK
      condition: succeeded()
      inputs:
        version: '8.0.x'

    - task: DotNetCoreCLI@2 # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/dotnet-core?view=azure-devops#restore-nuget-packages
      displayName: Restore project dependencies
      condition: succeeded()
      inputs:
        command: restore
        projects: '**/*.csproj'
        verbosityRestore: Normal
        feedsToUse: 'config'
        nugetConfigPath: './nuget.config'

    - task: DotNetCoreCLI@2
      displayName: Build solution
      condition: succeeded()
      inputs:
        projects: '${{ parameters.buildSolution }}'
        arguments: "--configuration ${{ parameters.buildConfiguration }} --no-restore"

    - task: DotNetCoreCLI@2
      displayName: Publish application
      condition: succeeded()
      inputs:
        command: publish
        publishWebProjects: false
        projects: '**/Presentation.Web.csproj'
        arguments: '--configuration ${{ parameters.buildConfiguration }} --no-restore --no-build --output $(build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: CopyFiles@2
      displayName: Prepare provisioning artifacts
      condition: succeeded()
      inputs:
        sourceFolder: './.azure'
        contents: '**'
        targetFolder: $(build.ArtifactStagingDirectory)

    # - task: DotNetCoreCLI@2
    #   displayName: Run unit tests
    #   condition: succeeded()
    #   inputs:
    #     command: test
    #     projects: '**/*[Tt]ests/*UnitTests.csproj'
    #     arguments: '--configuration ${{ parameters.buildConfiguration }}--no-restore --no-build'

    - publish: $(build.ArtifactStagingDirectory) # https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts?view=azure-devops&tabs=yaml
      displayName: Upload artifacts
      condition: succeeded()
      artifact: artifacts
